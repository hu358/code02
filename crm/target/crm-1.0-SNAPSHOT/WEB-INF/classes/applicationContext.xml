<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--扫描组件，让Spring托管-->
    <context:component-scan base-package="com.bjpowernode.services"/>
    <context:component-scan base-package="com.bjpowernode.mapper"/>

    <!--加载配置-->
    <!--ignore-unresolvable为true时，配置文件${}找不到对应占位符的值，直接赋值'${}'-->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>

    <!--配置数据源druid-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--driverClassName可以不写，智能匹配-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--整合MyBatis-->
    <!-- 配置 SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--读取mybatis的主配置-->
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <!--衔接数据源，目前使用的是数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--批量起别名,放在beans包中【也就是实体】-->
        <property name="typeAliasesPackage" value="com.bjpowernode.beans"/>
    </bean>
    <!-- 配置Spring整合MyBatis，扫描包 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注册MyBatis的映射文件,将mapper.xml扫描进主配置文件中-->
        <property name="basePackage" value="com.bjpowernode.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--衔接数据源，目前使用的是数据库连接池-->
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!--
        配置声明式事务：
            1. 配置通知 tx
            2. 配置AOP
     -->
    <tx:advice id="myAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--查询方法都必须以get开头，只读，支持事务-->
            <!--mybatis接口方法都用get表达查询-->
            <tx:method name="get*" read-only="true" propagation="SUPPORTS" />
            <!--其它方法都必须有事务-->
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <!--切入点-->
        <aop:pointcut id="allService" expression="execution(* *..services..*.*(..))" />
        <!--切入点+通知-->
        <aop:advisor advice-ref="myAdvice" pointcut-ref="allService" />
    </aop:config>
</beans>